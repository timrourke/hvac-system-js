<!DOCTYPE html>
<html>
  <head>
    <title><%= pkg.name %></title>

    <link rel="stylesheet" type="text/css" href="<%= css %>" media="all" />
  </head>
  <body>
    <section>
      <h1>Thermostat</h1>
      <ul>
        <form action="#0">
          <label for="min-temp">
            Min Temp:
            <input id="min-temp" type="number" value="65" min="0" max="100" step="1">
          </label>
          <label for="max-temp">
            Max Temp:
            <input id="max-temp" type="number" value="75" min="0" max="100" step="1">
          </label>
        </form>
        <li>Temp: <span class="temp">0</span></li>
        <li>Fan: <span class="fan">Off</span></li>
        <li>Heat: <span class="heat">Off</span></li>
        <li>Cool: <span class="cool">Off</span></li>
      </ul>
    </section>
    <script type="text/javascript" src="<%= js %>"></script>
    <script type="text/javascript">
      // DOM ready wrapper
      function ready(fn) {
        if (document.attachEvent ? document.readyState === "complete" : document.readyState !== "loading"){
          fn();
        } else {
          document.addEventListener('DOMContentLoaded', fn);
        }
      }

      // Set up a fake xerver to intercept AJAX requests sent by the HVAC object
      sinonFakeServerBuilder(
        () => '76',
        (xhr) => {},
        (xhr) => {},
        (xhr) => {}
      );

      ready(() => {
        // Get elements
        const tempEl = document.querySelector('.temp');
        const fanEl = document.querySelector('.fan');
        const heatEl = document.querySelector('.heat');
        const coolEl = document.querySelector('.cool');
        const minTempEl = document.querySelector('#min-temp');
        const maxTempEl = document.querySelector('#max-temp');

        // Construct controller
        const hvac = new HvacHttpImpl();
        const ui = new UiController(
          tempEl,
          fanEl,
          heatEl,
          coolEl,
          minTempEl,
          maxTempEl
        );
        const environmentController = new EnvironmentController(hvac, ui);

        // Attach DOM event binding for min temp input
        minTempEl.addEventListener('keyup', () => {
          environmentController.setMinTemp(minTempEl.value);
        });

        // Attach DOM event binding for max temp input
        maxTempEl.addEventListener('keyup', () => {
          environmentController.setMaxTemp(maxTempEl.value);
        });

        // Run app
        setInterval(() => {
          requestAnimationFrame(() => {
            environmentController.tick();
          });
        }, 1000);
      });
    </script>
  </body>
</html>
